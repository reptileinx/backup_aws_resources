AWSTemplateFormatVersion : '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
    This SAM creates the following resources:

      RDS Backup Procedure: Comprised of RDSSaveSnapshot Lambda function + IAM Role
      Subscribes Lambda function to SNS Topic in Account needing Backup

    Author: <reptileinx@gmail.com>

Outputs:

    RDSSaveSnapshotFunction:
      Description: 'RDSSaveSnapshot Lambda Function saves Failsafe snapshot to Failsafe account'
      Value: !GetAtt RDSSaveSnapshotFunction.Arn

Parameters:
    TargetAccountIdParam:
        Type: String

Resources:
    RDSSaveSnapshotIAMRole:
        Type: 'AWS::IAM::Role'
        Description: 'Allows Lambda Function to call AWS services on our behalf, including RDS and SNS'
        Properties:
            Path: '/'
            ManagedPolicyArns:
                - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
                - !Ref RDSCRUDPolicy
            AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                -
                  Sid: 'AllowLambdaServiceToAssumeRole'
                  Effect: 'Allow'
                  Action:
                    - 'sts:AssumeRole'
                  Principal:
                    Service:
                      - 'lambda.amazonaws.com'

    RDSSaveSnapshotFunction:
      Type: 'AWS::Serverless::Function'
      Properties:
        Handler: 'rdssavesnapshot.handler'
        Runtime: 'python2.7'
        Role: !GetAtt RDSSaveSnapshotIAMRole.Arn
        CodeUri: .
        Description: >-
           Save Shared RDS Snapshot to Failsafe account. Triggered by SNS in target Account for Failsafe backup
        MemorySize: 128
        Timeout: 300
        Events:
          SnsRdsSave:
            Type: SNS
            Properties:
              Topic: !Sub 'arn:aws:sns:ap-southeast-2:${TargetAccountIdParam}:reptileinx_save_failsafe_snapshot_sns_topic'
        Tags:
          Name: 'failsafe_rds_snapshot_save'
          BusinessDepartment: 'reptileinx'
          Environment: 'Prod'
          Expiry: 'Never'


    RDSCRUDPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: 'rds-save-snapshots-policy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: 'arn:aws:logs:*:*:*'
            - Effect: Allow
              Action:
                - 'rds:ListTagsForResource'
                - 'rds:DescribeDBSnapshots'
                - 'rds:DescribeDBInstances'
                - 'rds:DeleteDBSnapshot'
                - 'rds:CopyDBSnapshot'
                - 'rds:ModifyDBSnapshotAttribute'
                - 'SNS:Publish'
              Resource: '*'